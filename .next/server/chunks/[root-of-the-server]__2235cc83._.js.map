{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined\n}\n\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient()\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAEhE,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/api/equipment/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport { prisma } from '@/lib/prisma'\n\nexport async function GET() {\n  try {\n    const uniqueEquipment = await prisma.ticket.findMany({\n      select: { equipo: true },\n      distinct: ['equipo'],\n      orderBy: { equipo: 'asc' }\n    })\n\n    const equipmentList = uniqueEquipment\n      .map(item => item.equipo)\n      .filter(Boolean) // Remove any null/undefined values\n\n    return NextResponse.json({ data: equipmentList })\n  } catch (error) {\n    console.error('Error al obtener equipos:', error)\n    return NextResponse.json(\n      { error: 'Error al obtener equipos' },\n      { status: 500 }\n    )\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,kBAAkB,MAAM,sHAAA,CAAA,SAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;YACnD,QAAQ;gBAAE,QAAQ;YAAK;YACvB,UAAU;gBAAC;aAAS;YACpB,SAAS;gBAAE,QAAQ;YAAM;QAC3B;QAEA,MAAM,gBAAgB,gBACnB,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,EACvB,MAAM,CAAC,SAAS,mCAAmC;;QAEtD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,MAAM;QAAc;IACjD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA2B,GACpC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}