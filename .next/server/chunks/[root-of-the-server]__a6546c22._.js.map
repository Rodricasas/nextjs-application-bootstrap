{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined\n}\n\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient()\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAEhE,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/api/tickets/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport { prisma } from '@/lib/prisma'\n\nexport async function GET() {\n  try {\n    const tickets = await prisma.ticket.findMany({\n      orderBy: { created_at: 'desc' }\n    })\n    return NextResponse.json({ data: tickets })\n  } catch (error) {\n    console.error('Error al obtener tickets:', error)\n    return NextResponse.json(\n      { error: 'Error al obtener tickets' },\n      { status: 500 }\n    )\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json()\n    \n    // Validate required fields\n    const requiredFields = [\n      'numero_ticket',\n      'equipo',\n      'fecha_entrada',\n      'fecha_inicio_servicio',\n      'descripcion'\n    ]\n    \n    for (const field of requiredFields) {\n      if (!body[field]) {\n        return NextResponse.json(\n          { error: `Campo requerido: ${field}` },\n          { status: 400 }\n        )\n      }\n    }\n\n    // Convert date strings to Date objects\n    const ticketData = {\n      ...body,\n      fecha_entrada: new Date(body.fecha_entrada),\n      fecha_inicio_servicio: new Date(body.fecha_inicio_servicio),\n      fecha_fin_servicio: body.fecha_fin_servicio ? new Date(body.fecha_fin_servicio) : null,\n      costo_repuestos: body.costo_repuestos ? parseFloat(body.costo_repuestos) : 0,\n      costo_mano_obra: body.costo_mano_obra ? parseFloat(body.costo_mano_obra) : 0,\n      costos_externos_estimados: body.costos_externos_estimados ? parseFloat(body.costos_externos_estimados) : 0,\n    }\n\n    const ticket = await prisma.ticket.create({\n      data: ticketData\n    })\n\n    return NextResponse.json({ data: ticket }, { status: 201 })\n  } catch (error: any) {\n    console.error('Error al crear ticket:', error)\n    \n    if (error.code === 'P2002') {\n      return NextResponse.json(\n        { error: 'El n√∫mero de ticket ya existe' },\n        { status: 400 }\n      )\n    }\n    \n    return NextResponse.json(\n      { error: 'Error al crear ticket' },\n      { status: 500 }\n    )\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,UAAU,MAAM,sHAAA,CAAA,SAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;YAC3C,SAAS;gBAAE,YAAY;YAAO;QAChC;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,MAAM;QAAQ;IAC3C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA2B,GACpC;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAE/B,2BAA2B;QAC3B,MAAM,iBAAiB;YACrB;YACA;YACA;YACA;YACA;SACD;QAED,KAAK,MAAM,SAAS,eAAgB;YAClC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;oBAAE,OAAO,CAAC,iBAAiB,EAAE,OAAO;gBAAC,GACrC;oBAAE,QAAQ;gBAAI;YAElB;QACF;QAEA,uCAAuC;QACvC,MAAM,aAAa;YACjB,GAAG,IAAI;YACP,eAAe,IAAI,KAAK,KAAK,aAAa;YAC1C,uBAAuB,IAAI,KAAK,KAAK,qBAAqB;YAC1D,oBAAoB,KAAK,kBAAkB,GAAG,IAAI,KAAK,KAAK,kBAAkB,IAAI;YAClF,iBAAiB,KAAK,eAAe,GAAG,WAAW,KAAK,eAAe,IAAI;YAC3E,iBAAiB,KAAK,eAAe,GAAG,WAAW,KAAK,eAAe,IAAI;YAC3E,2BAA2B,KAAK,yBAAyB,GAAG,WAAW,KAAK,yBAAyB,IAAI;QAC3G;QAEA,MAAM,SAAS,MAAM,sHAAA,CAAA,SAAM,CAAC,MAAM,CAAC,MAAM,CAAC;YACxC,MAAM;QACR;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,MAAM;QAAO,GAAG;YAAE,QAAQ;QAAI;IAC3D,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,0BAA0B;QAExC,IAAI,MAAM,IAAI,KAAK,SAAS;YAC1B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAgC,GACzC;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}